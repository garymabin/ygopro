# Makefile generated by XPJ for android
-include Makefile.custom
ProjectName = Half
Half_cppfiles   += ./../../src/Half/half.cpp

Half_cpp_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.debug.P, $(Half_cppfiles)))))
Half_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(Half_ccfiles)))))
Half_c_debug_dep      = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.debug.P, $(Half_cfiles)))))
Half_debug_dep      = $(Half_cpp_debug_dep) $(Half_cc_debug_dep) $(Half_c_debug_dep)
-include $(Half_debug_dep)
Half_cpp_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.release.P, $(Half_cppfiles)))))
Half_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(Half_ccfiles)))))
Half_c_release_dep      = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.release.P, $(Half_cfiles)))))
Half_release_dep      = $(Half_cpp_release_dep) $(Half_cc_release_dep) $(Half_c_release_dep)
-include $(Half_release_dep)
Half_debug_hpaths    := 
Half_debug_hpaths    += ./../../src/Half
Half_debug_hpaths    += ./../../include
Half_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/platforms/android-14/arch-arm/usr/include
Half_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/4.8/include
Half_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
Half_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/4.8/include/backward
Half_debug_lpaths    := 
Half_debug_defines   := $(Half_custom_defines)
Half_debug_defines   += ANDROID
Half_debug_defines   += _LIB
Half_debug_defines   += GL_API_LEVEL_ES2
Half_debug_defines   += _DEBUG
Half_debug_libraries := 
Half_debug_common_cflags	:= $(Half_custom_cflags)
Half_debug_common_cflags    += -MMD
Half_debug_common_cflags    += $(addprefix -D, $(Half_debug_defines))
Half_debug_common_cflags    += $(addprefix -I, $(Half_debug_hpaths))
Half_debug_cflags	:= $(Half_debug_common_cflags)
Half_debug_cflags  += -fpic -fPIC -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -O2 -g -fomit-frame-pointer -fstrict-aliasing -funswitch-loops -finline-limit=300
Half_debug_cppflags	:= $(Half_debug_common_cflags)
Half_debug_cppflags  += -fpic -fPIC -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -O2 -g -fomit-frame-pointer -fstrict-aliasing -funswitch-loops -finline-limit=300
Half_debug_lflags    := $(Half_custom_lflags)
Half_debug_lflags    += $(addprefix -L, $(Half_debug_lpaths))
Half_debug_lflags    += -Wl,--start-group $(addprefix -l, $(Half_debug_libraries)) -Wl,--end-group
Half_debug_objsdir  = $(OBJS_DIR)/Half_debug
Half_debug_cpp_o    = $(addprefix $(Half_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(Half_cppfiles)))))
Half_debug_cc_o    = $(addprefix $(Half_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(Half_ccfiles)))))
Half_debug_c_o      = $(addprefix $(Half_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(Half_cfiles)))))
Half_debug_obj      = $(Half_debug_cpp_o) $(Half_debug_cc_o) $(Half_debug_c_o)
Half_debug_bin      := ./../../lib/Tegra-Android/libHalfD.a

clean_Half_debug: 
	$(SILENT_FLAG)$(ECHO) clean Half debug
	$(SILENT_FLAG)$(RMDIR) $(Half_debug_objsdir)
	$(SILENT_FLAG)$(RMDIR) $(Half_debug_bin)

build_Half_debug: postbuild_Half_debug
postbuild_Half_debug: mainbuild_Half_debug
mainbuild_Half_debug: prebuild_Half_debug $(Half_debug_bin)
prebuild_Half_debug:

$(Half_debug_bin): $(Half_debug_obj) 
	$(SILENT_FLAG)mkdir -p `dirname ./../../lib/Tegra-Android/libHalfD.a`
	$(SILENT_FLAG)$(AR) rcs $(Half_debug_bin) $(Half_debug_obj)
	$(SILENT_FLAG)$(ECHO) building $@ complete!

Half_debug_DEPDIR = $(dir $(@))/$(*F)
$(Half_debug_cpp_o): $(Half_debug_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) Half: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Half_debug_objsdir),, $@))), $(Half_cppfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CXX) $(Half_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Half_debug_objsdir),, $@))), $(Half_cppfiles)) -o $@
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Half_debug_objsdir),, $@))), $(Half_cppfiles))))))
	$(SILENT_FLAG)cp $(Half_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Half_debug_objsdir),, $@))), $(Half_cppfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Half_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Half_debug_objsdir),, $@))), $(Half_cppfiles))))).debug.P; \
	  rm -f $(Half_debug_DEPDIR).d

$(Half_debug_cc_o): $(Half_debug_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) Half: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Half_debug_objsdir),, $@))), $(Half_ccfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CXX) $(Half_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Half_debug_objsdir),, $@))), $(Half_ccfiles)) -o $@
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Half_debug_objsdir),, $@))), $(Half_ccfiles))))))
	$(SILENT_FLAG)cp $(Half_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Half_debug_objsdir),, $@))), $(Half_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Half_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Half_debug_objsdir),, $@))), $(Half_ccfiles))))).debug.P; \
	  rm -f $(Half_debug_DEPDIR).d

$(Half_debug_c_o): $(Half_debug_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) Half: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(Half_debug_objsdir),, $@))), $(Half_cfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CC) $(Half_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(Half_debug_objsdir),, $@))), $(Half_cfiles)) -o $@ 
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Half_debug_objsdir),, $@))), $(Half_cfiles))))))
	$(SILENT_FLAG)cp $(Half_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Half_debug_objsdir),, $@))), $(Half_cfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Half_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Half_debug_objsdir),, $@))), $(Half_cfiles))))).debug.P; \
	  rm -f $(Half_debug_DEPDIR).d

Half_release_hpaths    := 
Half_release_hpaths    += ./../../src/Half
Half_release_hpaths    += ./../../include
Half_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/platforms/android-14/arch-arm/usr/include
Half_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/4.8/include
Half_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include
Half_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/4.8/include/backward
Half_release_lpaths    := 
Half_release_defines   := $(Half_custom_defines)
Half_release_defines   += ANDROID
Half_release_defines   += _LIB
Half_release_defines   += GL_API_LEVEL_ES2
Half_release_defines   += NDEBUG
Half_release_libraries := 
Half_release_common_cflags	:= $(Half_custom_cflags)
Half_release_common_cflags    += -MMD
Half_release_common_cflags    += $(addprefix -D, $(Half_release_defines))
Half_release_common_cflags    += $(addprefix -I, $(Half_release_hpaths))
Half_release_cflags	:= $(Half_release_common_cflags)
Half_release_cflags  += -fpic -fPIC -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -O2 -g -fomit-frame-pointer -fstrict-aliasing -funswitch-loops -finline-limit=300
Half_release_cppflags	:= $(Half_release_common_cflags)
Half_release_cppflags  += -fpic -fPIC -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -O2 -g -fomit-frame-pointer -fstrict-aliasing -funswitch-loops -finline-limit=300
Half_release_lflags    := $(Half_custom_lflags)
Half_release_lflags    += $(addprefix -L, $(Half_release_lpaths))
Half_release_lflags    += -Wl,--start-group $(addprefix -l, $(Half_release_libraries)) -Wl,--end-group
Half_release_objsdir  = $(OBJS_DIR)/Half_release
Half_release_cpp_o    = $(addprefix $(Half_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(Half_cppfiles)))))
Half_release_cc_o    = $(addprefix $(Half_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(Half_ccfiles)))))
Half_release_c_o      = $(addprefix $(Half_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(Half_cfiles)))))
Half_release_obj      = $(Half_release_cpp_o) $(Half_release_cc_o) $(Half_release_c_o)
Half_release_bin      := ./../../lib/Tegra-Android/libHalf.a

clean_Half_release: 
	$(SILENT_FLAG)$(ECHO) clean Half release
	$(SILENT_FLAG)$(RMDIR) $(Half_release_objsdir)
	$(SILENT_FLAG)$(RMDIR) $(Half_release_bin)

build_Half_release: postbuild_Half_release
postbuild_Half_release: mainbuild_Half_release
mainbuild_Half_release: prebuild_Half_release $(Half_release_bin)
prebuild_Half_release:

$(Half_release_bin): $(Half_release_obj) 
	$(SILENT_FLAG)mkdir -p `dirname ./../../lib/Tegra-Android/libHalf.a`
	$(SILENT_FLAG)$(AR) rcs $(Half_release_bin) $(Half_release_obj)
	$(SILENT_FLAG)$(ECHO) building $@ complete!

Half_release_DEPDIR = $(dir $(@))/$(*F)
$(Half_release_cpp_o): $(Half_release_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) Half: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Half_release_objsdir),, $@))), $(Half_cppfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CXX) $(Half_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Half_release_objsdir),, $@))), $(Half_cppfiles)) -o $@
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Half_release_objsdir),, $@))), $(Half_cppfiles))))))
	$(SILENT_FLAG)cp $(Half_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Half_release_objsdir),, $@))), $(Half_cppfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Half_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(Half_release_objsdir),, $@))), $(Half_cppfiles))))).release.P; \
	  rm -f $(Half_release_DEPDIR).d

$(Half_release_cc_o): $(Half_release_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) Half: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Half_release_objsdir),, $@))), $(Half_ccfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CXX) $(Half_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Half_release_objsdir),, $@))), $(Half_ccfiles)) -o $@
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Half_release_objsdir),, $@))), $(Half_ccfiles))))))
	$(SILENT_FLAG)cp $(Half_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Half_release_objsdir),, $@))), $(Half_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Half_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(Half_release_objsdir),, $@))), $(Half_ccfiles))))).release.P; \
	  rm -f $(Half_release_DEPDIR).d

$(Half_release_c_o): $(Half_release_objsdir)/%.o:
	$(SILENT_FLAG)$(ECHO) Half: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(Half_release_objsdir),, $@))), $(Half_cfiles))...
	$(SILENT_FLAG)mkdir -p $(dir $(@))
	$(SILENT_FLAG)$(CC) $(Half_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(Half_release_objsdir),, $@))), $(Half_cfiles)) -o $@ 
	$(SILENT_FLAG)mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Half_release_objsdir),, $@))), $(Half_cfiles))))))
	$(SILENT_FLAG)cp $(Half_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Half_release_objsdir),, $@))), $(Half_cfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(Half_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(Half_release_objsdir),, $@))), $(Half_cfiles))))).release.P; \
	  rm -f $(Half_release_DEPDIR).d

clean_Half:  clean_Half_debug clean_Half_release
	$(SILENT_FLAG)rm -rf $(DEPSDIR)
